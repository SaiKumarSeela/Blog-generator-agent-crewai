#!/usr/bin/env python
import sys
import os
from pathlib import Path

# Add the project root to the Python path
project_root = Path(__file__).parent.parent.parent
sys.path.insert(0, str(project_root))
from blog_generator_ai_agent.crew import BlogGeneratorCrew

def run():
    """
    Run the Blog Generator Crew with default inputs.
    This function is called when using 'crewai run' command.
    """
    
    # Default inputs for testing
    inputs = {
        'pillar': 'Customer Loyalty and Rewards',
        'topic': 'How to Build an Effective Customer Loyalty Program',
        'research_method': 'SERP',
        'structure_type': 'How-to Guide',
        'primary_keyword': 'customer loyalty program',
        'keywords': {
            'primary': 'customer loyalty program',
            'secondary': ['loyalty rewards', 'customer retention', 'reward program benefits']
        },
        'outline': 'Will be generated by the crew',
        'research_findings': 'Will be generated by the crew'
    }
    
    # Initialize and run the crew
    blog_crew = BlogGeneratorCrew()
    
    print("🚀 Starting Blog Generator Crew...")
    print(f"📝 Topic: {inputs['topic']}")
    print(f"🎯 Primary Keyword: {inputs['primary_keyword']}")
    print("-" * 50)
    
    try:
        result = blog_crew.run_workflow(inputs)
        
        print("\n✅ Blog Generation Completed!")
        print("📄 Check 'generated_blog.md' for the output")
        print(f"📊 Result: {type(result)}")
        
        return result
        
    except Exception as e:
        print(f"❌ Error running crew: {str(e)}")
        return None

def run_with_custom_inputs(topic: str, pillar: str = "Content Marketing", 
                          research_method: str = "SERP", structure_type: str = "How-to Guide"):
    """
    Run the crew with custom inputs
    """
    inputs = {
        'pillar': pillar,
        'topic': topic,
        'research_method': research_method,
        'structure_type': structure_type,
        'primary_keyword': topic.lower().replace(' ', ' '),
        'keywords': {
            'primary': topic.lower(),
            'secondary': [f"how to {topic.lower()}", f"{topic.lower()} guide"]
        },
        'outline': 'Generated by crew',
        'research_findings': 'Generated by crew'
    }
    
    blog_crew = BlogGeneratorCrew()
    return blog_crew.run_workflow(inputs)

if __name__ == "__main__":
    # Check if custom topic provided as command line argument
    if len(sys.argv) > 1:
        custom_topic = " ".join(sys.argv[1:])
        print(f"🎯 Running with custom topic: {custom_topic}")
        run_with_custom_inputs(custom_topic)
    else:
        run()